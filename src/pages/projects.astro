---
import Box from "@/components/Box.astro";
import ProjectCard from "@/components/ProjectCard.astro";
import Layout from "@/components/Layout.astro";
---

<Layout>
  <Box as="section" mb="$8">
    <Box as="h2" type={{ _: "$3xl", sm: "$4xl" }} fontWeight="$bolder" mb="$6">
      Featured Projects
    </Box>
    <Box display="grid" gap="$4" gridTemplateColumns={{ sm: "1fr 1fr 1fr" }}>
      <ProjectCard
        href="https://github.com/roginfarrer/react-collapsed"
        title="react-collapsed"
        desc="React custom hook for creating animated and accessible expand/collapse components"
        repo="roginfarrer/react-collapsed"
      />
      <ProjectCard
        href="https://github.com/wayfair/rainbow-sprinkles"
        title="Rainbow Sprinkles"
        desc="Dynamic, theme-driven style props for Vanilla Extract."
        repo="wayfair/rainbow-sprinkles"
      />
      <ProjectCard
        href="https://github.com/system-props/system-props"
        title="System Props"
        desc="Responsive, theme-based, and typed style props for React."
        repo="system-props/system-props"
      />
    </Box>
  </Box>
</Layout>

<script>
  import { cachedFetch } from "../cache";

  const cards = document.querySelectorAll(
    "[data-project-card-repo]",
  ) as NodeListOf<HTMLElement>;

  cards.forEach(async (card) => {
    const repo = card.dataset.projectCardRepo;
    if (!repo) {
      return;
    }
    const [owner, project] = repo.split("/");

    const data = await cachedFetch<{ stargazers_count: number }>(
      `https://api.github.com/repos/${owner}/${project}`,
      // 6 hours
      { duration: 21600 },
    );
    const starEl = card.querySelector(".project-card-stars");
    if (starEl) {
      starEl.innerHTML = data.stargazers_count.toString();
    }
  });
</script>
