---
import type { HTMLAttributes, HTMLTag, Polymorphic } from "astro/types";
import { rainbowSprinkles, type Sprinkles } from "./Box.css";

export type Props<T extends HTMLTag> = Sprinkles &
  Omit<Polymorphic<{ as: T }>, keyof Sprinkles> & {
    className?: string;
    css?: Sprinkles;
  };

const {
  as: Component = "div",
  class: _className,
  className,
  style: propStyle,
  css,
  ...props
} = Astro.props;

const sprinkles = rainbowSprinkles(css ?? props);

const p: HTMLAttributes<"div"> & Record<string, any> = {};

const classes = [_className, className, sprinkles.className].filter(Boolean);
p["class:list"] = classes;
p.className = classes.length === 0 ? undefined : classes.join(" ");

const style = { ...sprinkles.style, ...propStyle };
p.style = Object.keys(style).length === 0 ? undefined : style;
---

<Component {...p} {...sprinkles.otherProps}><slot /></Component>

<script></script>
