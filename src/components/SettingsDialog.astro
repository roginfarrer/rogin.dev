---
import SettingsForm from "./SettingsForm.astro";
import { IoClose } from "react-icons/io5";
import { css } from "styled-system/css";
import { flex } from "styled-system/patterns";
---

<script>
  import { setupForm } from "./setupSettingsForm";

  function setup(doc = document) {
    const dialog = doc.querySelector("#settings-dialog") as HTMLDialogElement;
    setupForm(dialog);

    function openModal() {
      dialog.showModal();
      doc.querySelector("body")!.style.setProperty("overflow", "hidden");
    }

    // @ts-expect-error
    dialog.openModal = openModal;

    document
      .querySelector("#settings-dialog-close")
      ?.addEventListener("click", () => {
        dialog.close();
      });

    const dialogInner = document.querySelector(
      "#settings-dialog-inner",
    ) as HTMLDivElement;
    // Close modal
    dialog.addEventListener("touchend", (event) => {
      event.stopPropagation();
      doc.querySelector("body")!.style.removeProperty("overflow");
      dialog.close();
    });
    dialog.addEventListener("click", (event) => {
      doc.querySelector("body")!.style.removeProperty("overflow");
      dialog.close();
      event.stopPropagation();
    });
    // Don't close if touching inside modal
    dialogInner.addEventListener("touchend", (event) => {
      event.stopPropagation();
    });
    dialogInner.addEventListener("click", (event) => {
      event.stopPropagation();
    });
  }

  setup();

  document.addEventListener("astro:after-swap", () => {
    setup();
  });
</script>

<dialog
  id="settings-dialog"
  class={css({
    color: "inherit",
    width: "min(85dvw, 300px)",
    boxShadow: "0 25px 50px -12px rgb(0 0 0 / 0.25)",
    border: 0,
    padding: 0,
    backgroundColor: { _dark: "gray1" },
    "--backdrop-color": {
      base: "rgb(0 0 0 / 10%)",
      _dark: "rgb(255 255 255 / 10%)",
    },
    "&::backdrop": {
      backdropFilter: "blur(2px)",
      backgroundColor: "var(--backdrop-color)",
    },
  })}
>
  <div id="settings-dialog-inner" class={css({ p: "4" })}>
    <button
      class={flex({
        position: "absolute",
        top: "2",
        right: "2",
        justify: "center",
        align: "center",
        size: "36px",
      })}
      id="settings-dialog-close"
      title="Close dialog"
    >
      <IoClose size="1.25em" />
    </button>
    <div class={flex({ gap: "3", direction: "column" })}>
      <h2 class={css({ textStyle: "2xl" })}>Settings</h2>
      <SettingsForm />
    </div>
  </div>
</dialog>
